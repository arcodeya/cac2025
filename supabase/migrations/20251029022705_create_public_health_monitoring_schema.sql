/*
  # Public Health Monitoring Database Schema

  ## Overview
  Creates comprehensive database structure for tracking wastewater surveillance data,
  virus levels, outbreak predictions, and user preferences for the public health
  monitoring mobile app.

  ## New Tables

  ### 1. `sampling_sites`
  Stores information about wastewater sampling locations across Texas
  - `id` (uuid, primary key) - Unique identifier for each sampling site
  - `name` (text) - Name of the sampling site/city
  - `latitude` (numeric) - GPS latitude coordinate
  - `longitude` (numeric) - GPS longitude coordinate
  - `county` (text) - County name
  - `population` (integer) - Approximate population served
  - `active` (boolean) - Whether site is currently active
  - `created_at` (timestamptz) - Record creation timestamp
  - `updated_at` (timestamptz) - Last update timestamp

  ### 2. `virus_types`
  Reference table for all tracked viruses and pathogens
  - `id` (uuid, primary key) - Unique identifier
  - `name` (text) - Virus name (e.g., "RSV", "COVID-19")
  - `scientific_name` (text) - Scientific name of the pathogen
  - `description` (text) - Detailed description of the virus
  - `symptoms` (text[]) - Array of common symptoms
  - `transmission` (text) - How the virus spreads
  - `prevention_tips` (text[]) - Array of prevention recommendations
  - `severity_level` (text) - Risk level (low, medium, high)
  - `color_code` (text) - Hex color for map visualization
  - `created_at` (timestamptz) - Record creation timestamp

  ### 3. `wastewater_readings`
  Stores historical and current wastewater surveillance data
  - `id` (uuid, primary key) - Unique identifier
  - `site_id` (uuid, foreign key) - References sampling_sites
  - `virus_id` (uuid, foreign key) - References virus_types
  - `concentration_level` (numeric) - Measured virus concentration
  - `level_category` (text) - Human-readable level (low, medium, high)
  - `trend` (text) - Trend indicator (increasing, decreasing, stable)
  - `sample_date` (date) - Date sample was collected
  - `processed_date` (timestamptz) - Date data was processed
  - `confidence_score` (numeric) - Data quality confidence (0-1)
  - `raw_data` (jsonb) - Additional metadata from source
  - `created_at` (timestamptz) - Record creation timestamp

  ### 4. `predictions`
  Stores outbreak predictions generated by ML models
  - `id` (uuid, primary key) - Unique identifier
  - `site_id` (uuid, foreign key) - References sampling_sites
  - `virus_id` (uuid, foreign key) - References virus_types
  - `prediction_date` (date) - Date of the prediction
  - `predicted_level` (numeric) - Predicted concentration level
  - `predicted_category` (text) - Predicted category (low, medium, high)
  - `confidence_score` (numeric) - Model confidence (0-1)
  - `model_type` (text) - Algorithm used (trend, ml, multifactor)
  - `factors_used` (jsonb) - Input factors for prediction
  - `created_at` (timestamptz) - When prediction was made

  ### 5. `user_locations`
  Stores user location preferences and tracking data
  - `id` (uuid, primary key) - Unique identifier
  - `user_id` (uuid) - User identifier
  - `latitude` (numeric) - User's latitude
  - `longitude` (numeric) - User's longitude
  - `nearest_site_id` (uuid, foreign key) - References sampling_sites
  - `notification_radius_km` (numeric) - Alert radius in kilometers
  - `updated_at` (timestamptz) - Last location update

  ### 6. `alerts`
  Stores alert history and configurations
  - `id` (uuid, primary key) - Unique identifier
  - `user_id` (uuid) - User who received alert
  - `site_id` (uuid, foreign key) - References sampling_sites
  - `virus_id` (uuid, foreign key) - References virus_types
  - `alert_type` (text) - Type of alert (spike, prediction, threshold)
  - `severity` (text) - Alert severity (info, warning, critical)
  - `message` (text) - Alert message content
  - `sent_at` (timestamptz) - When alert was sent
  - `read_at` (timestamptz) - When user read the alert

  ### 7. `public_health_events`
  Tracks other public health issues beyond viruses
  - `id` (uuid, primary key) - Unique identifier
  - `event_type` (text) - Type (contamination, leak, air_quality, etc.)
  - `title` (text) - Event title
  - `description` (text) - Detailed description
  - `latitude` (numeric) - Location latitude
  - `longitude` (numeric) - Location longitude
  - `severity` (text) - Severity level
  - `status` (text) - Current status (active, resolved, monitoring)
  - `reported_at` (timestamptz) - When event was reported
  - `resolved_at` (timestamptz) - When event was resolved
  - `created_at` (timestamptz) - Record creation timestamp

  ## Security
  - Enable RLS on all tables
  - Allow public read access to sampling_sites, virus_types, wastewater_readings, and predictions
  - Restrict user_locations and alerts to authenticated users only
  - Allow public read for public_health_events

  ## Indexes
  - Create indexes on frequently queried columns for performance
  - Spatial indexes for location-based queries
  - Time-based indexes for trend analysis
*/

-- Create sampling_sites table
CREATE TABLE IF NOT EXISTS sampling_sites (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  name text NOT NULL,
  latitude numeric(10, 8) NOT NULL,
  longitude numeric(11, 8) NOT NULL,
  county text,
  population integer DEFAULT 0,
  active boolean DEFAULT true,
  created_at timestamptz DEFAULT now(),
  updated_at timestamptz DEFAULT now()
);

-- Create virus_types table
CREATE TABLE IF NOT EXISTS virus_types (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  name text UNIQUE NOT NULL,
  scientific_name text,
  description text,
  symptoms text[],
  transmission text,
  prevention_tips text[],
  severity_level text DEFAULT 'medium',
  color_code text DEFAULT '#3b82f6',
  created_at timestamptz DEFAULT now()
);

-- Create wastewater_readings table
CREATE TABLE IF NOT EXISTS wastewater_readings (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  site_id uuid REFERENCES sampling_sites(id) ON DELETE CASCADE,
  virus_id uuid REFERENCES virus_types(id) ON DELETE CASCADE,
  concentration_level numeric,
  level_category text DEFAULT 'low',
  trend text DEFAULT 'stable',
  sample_date date NOT NULL,
  processed_date timestamptz DEFAULT now(),
  confidence_score numeric DEFAULT 0.8,
  raw_data jsonb,
  created_at timestamptz DEFAULT now()
);

-- Create predictions table
CREATE TABLE IF NOT EXISTS predictions (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  site_id uuid REFERENCES sampling_sites(id) ON DELETE CASCADE,
  virus_id uuid REFERENCES virus_types(id) ON DELETE CASCADE,
  prediction_date date NOT NULL,
  predicted_level numeric,
  predicted_category text,
  confidence_score numeric,
  model_type text DEFAULT 'trend',
  factors_used jsonb,
  created_at timestamptz DEFAULT now()
);

-- Create user_locations table
CREATE TABLE IF NOT EXISTS user_locations (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  latitude numeric(10, 8),
  longitude numeric(11, 8),
  nearest_site_id uuid REFERENCES sampling_sites(id),
  notification_radius_km numeric DEFAULT 50,
  updated_at timestamptz DEFAULT now()
);

-- Create alerts table
CREATE TABLE IF NOT EXISTS alerts (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  site_id uuid REFERENCES sampling_sites(id),
  virus_id uuid REFERENCES virus_types(id),
  alert_type text NOT NULL,
  severity text DEFAULT 'info',
  message text NOT NULL,
  sent_at timestamptz DEFAULT now(),
  read_at timestamptz
);

-- Create public_health_events table
CREATE TABLE IF NOT EXISTS public_health_events (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  event_type text NOT NULL,
  title text NOT NULL,
  description text,
  latitude numeric(10, 8),
  longitude numeric(11, 8),
  severity text DEFAULT 'medium',
  status text DEFAULT 'active',
  reported_at timestamptz DEFAULT now(),
  resolved_at timestamptz,
  created_at timestamptz DEFAULT now()
);

-- Create indexes for performance
CREATE INDEX IF NOT EXISTS idx_wastewater_readings_site ON wastewater_readings(site_id);
CREATE INDEX IF NOT EXISTS idx_wastewater_readings_virus ON wastewater_readings(virus_id);
CREATE INDEX IF NOT EXISTS idx_wastewater_readings_date ON wastewater_readings(sample_date DESC);
CREATE INDEX IF NOT EXISTS idx_predictions_site ON predictions(site_id);
CREATE INDEX IF NOT EXISTS idx_predictions_date ON predictions(prediction_date DESC);
CREATE INDEX IF NOT EXISTS idx_user_locations_user ON user_locations(user_id);
CREATE INDEX IF NOT EXISTS idx_alerts_user ON alerts(user_id);

-- Enable Row Level Security
ALTER TABLE sampling_sites ENABLE ROW LEVEL SECURITY;
ALTER TABLE virus_types ENABLE ROW LEVEL SECURITY;
ALTER TABLE wastewater_readings ENABLE ROW LEVEL SECURITY;
ALTER TABLE predictions ENABLE ROW LEVEL SECURITY;
ALTER TABLE user_locations ENABLE ROW LEVEL SECURITY;
ALTER TABLE alerts ENABLE ROW LEVEL SECURITY;
ALTER TABLE public_health_events ENABLE ROW LEVEL SECURITY;

-- RLS Policies for public read access
CREATE POLICY "Public can view sampling sites"
  ON sampling_sites FOR SELECT
  USING (true);

CREATE POLICY "Public can view virus types"
  ON virus_types FOR SELECT
  USING (true);

CREATE POLICY "Public can view wastewater readings"
  ON wastewater_readings FOR SELECT
  USING (true);

CREATE POLICY "Public can view predictions"
  ON predictions FOR SELECT
  USING (true);

CREATE POLICY "Public can view public health events"
  ON public_health_events FOR SELECT
  USING (true);

-- RLS Policies for authenticated user data
CREATE POLICY "Users can view own locations"
  ON user_locations FOR SELECT
  TO authenticated
  USING (auth.uid() = user_id);

CREATE POLICY "Users can insert own locations"
  ON user_locations FOR INSERT
  TO authenticated
  WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Users can update own locations"
  ON user_locations FOR UPDATE
  TO authenticated
  USING (auth.uid() = user_id)
  WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Users can view own alerts"
  ON alerts FOR SELECT
  TO authenticated
  USING (auth.uid() = user_id);

CREATE POLICY "Users can update own alerts"
  ON alerts FOR UPDATE
  TO authenticated
  USING (auth.uid() = user_id)
  WITH CHECK (auth.uid() = user_id);

-- Insert initial virus types data
INSERT INTO virus_types (name, scientific_name, description, symptoms, transmission, prevention_tips, severity_level, color_code)
VALUES 
  ('RSV', 'Respiratory Syncytial Virus', 'A common respiratory virus that usually causes mild, cold-like symptoms but can be serious in infants and older adults.', 
   ARRAY['Runny nose', 'Coughing', 'Sneezing', 'Fever', 'Wheezing'], 
   'Spread through respiratory droplets when an infected person coughs or sneezes, and by touching contaminated surfaces.',
   ARRAY['Wash hands frequently', 'Avoid close contact with sick people', 'Cover coughs and sneezes', 'Clean and disinfect surfaces'],
   'high', '#ef4444'),
   
  ('COVID-19', 'SARS-CoV-2', 'A contagious disease caused by the SARS-CoV-2 virus that primarily affects the respiratory system.',
   ARRAY['Fever', 'Cough', 'Shortness of breath', 'Fatigue', 'Loss of taste or smell', 'Body aches'],
   'Primarily spreads through respiratory droplets and aerosols when infected people breathe, talk, cough, or sneeze.',
   ARRAY['Get vaccinated', 'Wear masks in crowded indoor spaces', 'Maintain physical distance', 'Improve ventilation', 'Wash hands regularly'],
   'high', '#dc2626'),
   
  ('Influenza A', 'Influenza A Virus', 'A highly contagious respiratory infection that can cause seasonal epidemics.',
   ARRAY['Fever', 'Chills', 'Cough', 'Sore throat', 'Body aches', 'Headache', 'Fatigue'],
   'Spreads through droplets when infected people cough, sneeze, or talk, and by touching contaminated surfaces.',
   ARRAY['Get annual flu vaccine', 'Wash hands often', 'Avoid touching face', 'Stay home when sick', 'Cover coughs and sneezes'],
   'medium', '#f59e0b'),
   
  ('Influenza B', 'Influenza B Virus', 'A respiratory virus similar to Influenza A but typically causes milder illness.',
   ARRAY['Fever', 'Cough', 'Sore throat', 'Body aches', 'Fatigue', 'Nasal congestion'],
   'Spreads through respiratory droplets and contact with contaminated surfaces.',
   ARRAY['Get annual flu vaccine', 'Practice good hygiene', 'Avoid close contact with sick people', 'Disinfect surfaces'],
   'medium', '#fb923c'),
   
  ('Measles', 'Measles Morbillivirus', 'A highly contagious viral disease that can cause serious complications.',
   ARRAY['High fever', 'Cough', 'Runny nose', 'Red eyes', 'Rash', 'White spots in mouth'],
   'One of the most contagious diseases, spreads through airborne particles and direct contact.',
   ARRAY['Get MMR vaccine', 'Isolate infected individuals', 'Maintain good ventilation', 'Practice hand hygiene'],
   'high', '#e11d48'),
   
  ('Polio', 'Poliovirus', 'A disabling and life-threatening disease that can affect the spinal cord and cause paralysis.',
   ARRAY['Fever', 'Fatigue', 'Headache', 'Vomiting', 'Neck stiffness', 'Limb pain'],
   'Spreads through person-to-person contact and contaminated water or food.',
   ARRAY['Get polio vaccine', 'Practice good hygiene', 'Drink safe water', 'Wash hands before eating'],
   'high', '#be123c'),
   
  ('Dengue', 'Dengue Virus', 'A mosquito-borne viral infection causing flu-like illness that can develop into severe dengue.',
   ARRAY['High fever', 'Severe headache', 'Pain behind eyes', 'Joint pain', 'Nausea', 'Rash'],
   'Primarily transmitted by Aedes mosquitoes, particularly in tropical and subtropical areas.',
   ARRAY['Use mosquito repellent', 'Wear protective clothing', 'Eliminate standing water', 'Use mosquito nets'],
   'medium', '#ea580c')
ON CONFLICT (name) DO NOTHING;
